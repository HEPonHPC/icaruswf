#include "mchitmodules.fcl"
#include "mcreco.fcl"
#include "mctrutht0matching.fcl"
#include "stage0_icarus_mc_defs.fcl"
#include "stage0_icarus_defs.fcl"
#include "services_common_icarus.fcl"
#include "channelmapping_icarus.fcl"

process_name: HitFinding


## Add the MC module to the list of producers
physics.producers: {  @table::icarus_stage0_producers
                      @table::icarus_stage0_mc_producers
                   }

 physics.filters:
 {
     @table::icarus_stage0_filters
 }

 physics.analyzers:
 {
     @table::icarus_stage0_analyzers
 }

services:
{
  Timestamp:           { }
  IICARUSChannelMap:      @local::icarus_channelmappinggservice
                          @table::icarus_wirecalibration_minimum_services
}

## Use the following to run the full defined stage0 set of modules
physics.reco: [
               "gaushitTPCEE",
               "gaushitTPCEW",
               "gaushitTPCWE",
               "gaushitTPCWW"
              ]

services.FileCatalogMetadata:       @erase
services.DuplicateEventTracker:     @erase
services.SpaceChargeService:        @erase
services.BackTrackerService:        @erase
services.ParticleInventoryService:  @erase

services.ChannelStatusService.ChannelStatusProvider.UseDB: false
services.ChannelStatusService.ChannelStatusProvider.UseFile: false
services.DetPedestalService.DetPedestalRetrievalAlg.UseDB: false
services.DetPedestalService.DetPedestalRetrievalAlg.UseFile: false
services.DetectorClocksService.InheritClockConfig: false
services.DetectorPropertiesService.InheritNumberTimeSamples: false 

services.TimeTracker.printSummary: false
services.TimeTracker.dbOutput.filename: "timing.db"
services.MemoryTracker: @erase

services.scheduler.num_threads: 4
